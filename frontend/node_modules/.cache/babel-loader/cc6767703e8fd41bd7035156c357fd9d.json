{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\n\nfunction cuttable(node) {\n  var type = _typeof(node);\n\n  return type === 'string' || type === 'number';\n}\n\nfunction getNodesLen(nodeList) {\n  var totalLen = 0;\n  nodeList.forEach(function (node) {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\n\nfunction sliceNodes(nodeList, len) {\n  var currLen = 0;\n  var currentNodeList = [];\n\n  for (var i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n\n    var node = nodeList[i];\n    var canCut = cuttable(node);\n    var nodeLen = canCut ? String(node).length : 1;\n    var nextLen = currLen + nodeLen; // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n\n    if (nextLen > len) {\n      var restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n\n  return nodeList;\n}\n\nvar NONE = 0;\nvar PREPARE = 1;\nvar WALKING = 2;\nvar DONE_WITH_ELLIPSIS = 3;\nvar DONE_WITHOUT_ELLIPSIS = 4;\n\nvar Ellipsis = function Ellipsis(_ref) {\n  var enabledMeasure = _ref.enabledMeasure,\n      children = _ref.children,\n      text = _ref.text,\n      width = _ref.width,\n      fontSize = _ref.fontSize,\n      rows = _ref.rows,\n      onEllipsis = _ref.onEllipsis;\n\n  var _React$useState = React.useState([0, 0, 0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cutLength = _React$useState2[0],\n      setCutLength = _React$useState2[1];\n\n  var _React$useState3 = React.useState(NONE),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      walkingState = _React$useState4[0],\n      setWalkingState = _React$useState4[1];\n\n  var _cutLength = _slicedToArray(cutLength, 3),\n      startLen = _cutLength[0],\n      midLen = _cutLength[1],\n      endLen = _cutLength[2];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      singleRowHeight = _React$useState6[0],\n      setSingleRowHeight = _React$useState6[1];\n\n  var singleRowRef = React.useRef(null);\n  var midRowRef = React.useRef(null);\n  var nodeList = React.useMemo(function () {\n    return toArray(text);\n  }, [text]);\n  var totalLen = React.useMemo(function () {\n    return getNodesLen(nodeList);\n  }, [nodeList]);\n  var mergedChildren = React.useMemo(function () {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]); // ======================== Walk ========================\n\n  useIsomorphicLayoutEffect(function () {\n    if (enabledMeasure && width && fontSize && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, fontSize, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(function () {\n    var _a, _b;\n\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        var midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        var maxHeight = rows * singleRowHeight;\n\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          var _midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n\n          var _maxHeight = rows * singleRowHeight;\n\n          var nextStartLen = startLen;\n          var nextEndLen = endLen; // We reach the last round\n\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (_midHeight <= _maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n\n          var nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]); // ======================= Render =======================\n\n  var measureStyle = {\n    width: width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n\n  var renderMeasure = function renderMeasure(content, ref, style) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      ref: ref,\n      style: _extends({\n        position: 'fixed',\n        display: 'block',\n        left: 0,\n        top: 0,\n        zIndex: -9999,\n        visibility: 'hidden',\n        pointerEvents: 'none',\n        fontSize: Math.floor(fontSize / 2) * 2\n      }, style)\n    }, content);\n  };\n\n  var renderMeasureSlice = function renderMeasureSlice(len, ref) {\n    var sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\n\nexport default Ellipsis;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/EmployeeMS-master/frontend/node_modules/antd/es/typography/Base/Ellipsis.js"],"names":["_extends","_slicedToArray","_typeof","toArray","useIsomorphicLayoutEffect","React","cuttable","node","type","getNodesLen","nodeList","totalLen","forEach","String","length","sliceNodes","len","currLen","currentNodeList","i","canCut","nodeLen","nextLen","restLen","push","slice","NONE","PREPARE","WALKING","DONE_WITH_ELLIPSIS","DONE_WITHOUT_ELLIPSIS","Ellipsis","_ref","enabledMeasure","children","text","width","fontSize","rows","onEllipsis","_React$useState","useState","_React$useState2","cutLength","setCutLength","_React$useState3","_React$useState4","walkingState","setWalkingState","_cutLength","startLen","midLen","endLen","_React$useState5","_React$useState6","singleRowHeight","setSingleRowHeight","singleRowRef","useRef","midRowRef","useMemo","mergedChildren","Math","ceil","_a","current","offsetHeight","_b","midHeight","maxHeight","_midHeight","_maxHeight","nextStartLen","nextEndLen","nextMidLen","measureStyle","whiteSpace","margin","padding","renderMeasure","content","ref","style","createElement","position","display","left","top","zIndex","visibility","pointerEvents","floor","renderMeasureSlice","sliceNodeList","Fragment","wordBreak","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nfunction cuttable(node) {\n  var type = _typeof(node);\n  return type === 'string' || type === 'number';\n}\nfunction getNodesLen(nodeList) {\n  var totalLen = 0;\n  nodeList.forEach(function (node) {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\nfunction sliceNodes(nodeList, len) {\n  var currLen = 0;\n  var currentNodeList = [];\n  for (var i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n    var node = nodeList[i];\n    var canCut = cuttable(node);\n    var nodeLen = canCut ? String(node).length : 1;\n    var nextLen = currLen + nodeLen;\n    // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n    if (nextLen > len) {\n      var restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n  return nodeList;\n}\nvar NONE = 0;\nvar PREPARE = 1;\nvar WALKING = 2;\nvar DONE_WITH_ELLIPSIS = 3;\nvar DONE_WITHOUT_ELLIPSIS = 4;\nvar Ellipsis = function Ellipsis(_ref) {\n  var enabledMeasure = _ref.enabledMeasure,\n    children = _ref.children,\n    text = _ref.text,\n    width = _ref.width,\n    fontSize = _ref.fontSize,\n    rows = _ref.rows,\n    onEllipsis = _ref.onEllipsis;\n  var _React$useState = React.useState([0, 0, 0]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    cutLength = _React$useState2[0],\n    setCutLength = _React$useState2[1];\n  var _React$useState3 = React.useState(NONE),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    walkingState = _React$useState4[0],\n    setWalkingState = _React$useState4[1];\n  var _cutLength = _slicedToArray(cutLength, 3),\n    startLen = _cutLength[0],\n    midLen = _cutLength[1],\n    endLen = _cutLength[2];\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    singleRowHeight = _React$useState6[0],\n    setSingleRowHeight = _React$useState6[1];\n  var singleRowRef = React.useRef(null);\n  var midRowRef = React.useRef(null);\n  var nodeList = React.useMemo(function () {\n    return toArray(text);\n  }, [text]);\n  var totalLen = React.useMemo(function () {\n    return getNodesLen(nodeList);\n  }, [nodeList]);\n  var mergedChildren = React.useMemo(function () {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]);\n  // ======================== Walk ========================\n  useIsomorphicLayoutEffect(function () {\n    if (enabledMeasure && width && fontSize && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, fontSize, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(function () {\n    var _a, _b;\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        var midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        var maxHeight = rows * singleRowHeight;\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          var _midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n          var _maxHeight = rows * singleRowHeight;\n          var nextStartLen = startLen;\n          var nextEndLen = endLen;\n          // We reach the last round\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (_midHeight <= _maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n          var nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]);\n  // ======================= Render =======================\n  var measureStyle = {\n    width: width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n  var renderMeasure = function renderMeasure(content, ref, style) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      ref: ref,\n      style: _extends({\n        position: 'fixed',\n        display: 'block',\n        left: 0,\n        top: 0,\n        zIndex: -9999,\n        visibility: 'hidden',\n        pointerEvents: 'none',\n        fontSize: Math.floor(fontSize / 2) * 2\n      }, style)\n    }, content);\n  };\n  var renderMeasureSlice = function renderMeasureSlice(len, ref) {\n    var sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\nexport default Ellipsis;"]},"metadata":{},"sourceType":"module"}