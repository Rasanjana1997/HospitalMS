{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcDropdown from 'rc-dropdown';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { OverrideProvider } from '../menu/OverrideContext';\nimport getPlacements from '../_util/placements';\nimport { cloneElement } from '../_util/reactNode';\nimport { tuple } from '../_util/type';\nimport warning from '../_util/warning';\nimport DropdownButton from './dropdown-button';\nvar Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight', 'top', 'bottom');\n\nvar Dropdown = function Dropdown(props) {\n  var _React$useContext = React.useContext(ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction; // Warning for deprecated usage\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          deprecatedName = _ref2[0],\n          newName = _ref2[1];\n\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', \"`\".concat(deprecatedName, \"` is deprecated which will be removed in next major version, please use `\").concat(newName, \"` instead.\")) : void 0;\n    });\n  }\n\n  var getTransitionName = function getTransitionName() {\n    var rootPrefixCls = getPrefixCls();\n    var _props$placement = props.placement,\n        placement = _props$placement === void 0 ? '' : _props$placement,\n        transitionName = props.transitionName;\n\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n\n    if (placement.includes('top')) {\n      return \"\".concat(rootPrefixCls, \"-slide-down\");\n    }\n\n    return \"\".concat(rootPrefixCls, \"-slide-up\");\n  };\n\n  var getPlacement = function getPlacement() {\n    var placement = props.placement;\n\n    if (!placement) {\n      return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n\n    if (placement.includes('Center')) {\n      var newPlacement = placement.slice(0, placement.indexOf('Center'));\n      process.env.NODE_ENV !== \"production\" ? warning(!placement.includes('Center'), 'Dropdown', \"You are using '\".concat(placement, \"' placement in Dropdown, which is deprecated. Try to use '\").concat(newPlacement, \"' instead.\")) : void 0;\n      return newPlacement;\n    }\n\n    return placement;\n  };\n\n  var arrow = props.arrow,\n      customizePrefixCls = props.prefixCls,\n      children = props.children,\n      trigger = props.trigger,\n      disabled = props.disabled,\n      getPopupContainer = props.getPopupContainer,\n      overlayClassName = props.overlayClassName,\n      visible = props.visible,\n      open = props.open,\n      onVisibleChange = props.onVisibleChange,\n      onOpenChange = props.onOpenChange,\n      _props$mouseEnterDela = props.mouseEnterDelay,\n      mouseEnterDelay = _props$mouseEnterDela === void 0 ? 0.15 : _props$mouseEnterDela,\n      _props$mouseLeaveDela = props.mouseLeaveDelay,\n      mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela;\n  var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  var child = React.Children.only(children);\n  var dropdownTrigger = cloneElement(child, {\n    className: classNames(\"\".concat(prefixCls, \"-trigger\"), _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), child.props.className),\n    disabled: disabled\n  });\n  var triggerActions = disabled ? [] : trigger;\n  var alignPoint;\n\n  if (triggerActions && triggerActions.includes('contextMenu')) {\n    alignPoint = true;\n  } // =========================== Visible ============================\n\n\n  var _useMergedState = useMergedState(false, {\n    value: open !== undefined ? open : visible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpen = _useMergedState2[0],\n      setOpen = _useMergedState2[1];\n\n  var onInnerOpenChange = useEvent(function (nextOpen) {\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(nextOpen);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n    setOpen(nextOpen);\n  }); // =========================== Overlay ============================\n\n  var overlayClassNameCustomized = classNames(overlayClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n  var builtinPlacements = getPlacements({\n    arrowPointAtCenter: _typeof(arrow) === 'object' && arrow.pointAtCenter,\n    autoAdjustOverflow: true\n  });\n  var onMenuClick = React.useCallback(function () {\n    setOpen(false);\n  }, []);\n\n  var renderOverlay = function renderOverlay() {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    var overlay = props.overlay;\n    var overlayNode;\n\n    if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, overlayNode) : overlayNode);\n    return /*#__PURE__*/React.createElement(OverrideProvider, {\n      prefixCls: \"\".concat(prefixCls, \"-menu\"),\n      expandIcon: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n      }, /*#__PURE__*/React.createElement(RightOutlined, {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n      })),\n      mode: \"vertical\",\n      selectable: false,\n      onClick: onMenuClick,\n      validator: function validator(_ref3) {\n        var mode = _ref3.mode; // Warning if use other mode\n\n        process.env.NODE_ENV !== \"production\" ? warning(!mode || mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(mode, \"\\\" is not supported for Dropdown's Menu.\")) : void 0;\n      }\n    }, overlayNode);\n  }; // ============================ Render ============================\n\n\n  return /*#__PURE__*/React.createElement(RcDropdown, _extends({\n    alignPoint: alignPoint\n  }, props, {\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: mergedOpen,\n    builtinPlacements: builtinPlacements,\n    arrow: !!arrow,\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: renderOverlay,\n    placement: getPlacement(),\n    onVisibleChange: onInnerOpenChange\n  }), dropdownTrigger);\n};\n\nDropdown.Button = DropdownButton;\nexport default Dropdown;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/EmployeeMS-master/frontend/node_modules/antd/es/dropdown/dropdown.js"],"names":["_extends","_typeof","_defineProperty","_slicedToArray","RightOutlined","classNames","RcDropdown","useEvent","useMergedState","React","ConfigContext","OverrideProvider","getPlacements","cloneElement","tuple","warning","DropdownButton","Placements","Dropdown","props","_React$useContext","useContext","getContextPopupContainer","getPopupContainer","getPrefixCls","direction","process","env","NODE_ENV","forEach","_ref","_ref2","deprecatedName","newName","concat","getTransitionName","rootPrefixCls","_props$placement","placement","transitionName","undefined","includes","getPlacement","newPlacement","slice","indexOf","arrow","customizePrefixCls","prefixCls","children","trigger","disabled","overlayClassName","visible","open","onVisibleChange","onOpenChange","_props$mouseEnterDela","mouseEnterDelay","_props$mouseLeaveDela","mouseLeaveDelay","child","Children","only","dropdownTrigger","className","triggerActions","alignPoint","_useMergedState","value","_useMergedState2","mergedOpen","setOpen","onInnerOpenChange","nextOpen","overlayClassNameCustomized","builtinPlacements","arrowPointAtCenter","pointAtCenter","autoAdjustOverflow","onMenuClick","useCallback","renderOverlay","overlay","overlayNode","createElement","expandIcon","mode","selectable","onClick","validator","_ref3","Button"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport RightOutlined from \"@ant-design/icons/es/icons/RightOutlined\";\nimport classNames from 'classnames';\nimport RcDropdown from 'rc-dropdown';\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { OverrideProvider } from '../menu/OverrideContext';\nimport getPlacements from '../_util/placements';\nimport { cloneElement } from '../_util/reactNode';\nimport { tuple } from '../_util/type';\nimport warning from '../_util/warning';\nimport DropdownButton from './dropdown-button';\nvar Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight', 'top', 'bottom');\nvar Dropdown = function Dropdown(props) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getContextPopupContainer = _React$useContext.getPopupContainer,\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    [['visible', 'open'], ['onVisibleChange', 'onOpenChange']].forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        deprecatedName = _ref2[0],\n        newName = _ref2[1];\n      process.env.NODE_ENV !== \"production\" ? warning(!(deprecatedName in props), 'Dropdown', \"`\".concat(deprecatedName, \"` is deprecated which will be removed in next major version, please use `\").concat(newName, \"` instead.\")) : void 0;\n    });\n  }\n  var getTransitionName = function getTransitionName() {\n    var rootPrefixCls = getPrefixCls();\n    var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? '' : _props$placement,\n      transitionName = props.transitionName;\n    if (transitionName !== undefined) {\n      return transitionName;\n    }\n    if (placement.includes('top')) {\n      return \"\".concat(rootPrefixCls, \"-slide-down\");\n    }\n    return \"\".concat(rootPrefixCls, \"-slide-up\");\n  };\n  var getPlacement = function getPlacement() {\n    var placement = props.placement;\n    if (!placement) {\n      return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n    if (placement.includes('Center')) {\n      var newPlacement = placement.slice(0, placement.indexOf('Center'));\n      process.env.NODE_ENV !== \"production\" ? warning(!placement.includes('Center'), 'Dropdown', \"You are using '\".concat(placement, \"' placement in Dropdown, which is deprecated. Try to use '\").concat(newPlacement, \"' instead.\")) : void 0;\n      return newPlacement;\n    }\n    return placement;\n  };\n  var arrow = props.arrow,\n    customizePrefixCls = props.prefixCls,\n    children = props.children,\n    trigger = props.trigger,\n    disabled = props.disabled,\n    getPopupContainer = props.getPopupContainer,\n    overlayClassName = props.overlayClassName,\n    visible = props.visible,\n    open = props.open,\n    onVisibleChange = props.onVisibleChange,\n    onOpenChange = props.onOpenChange,\n    _props$mouseEnterDela = props.mouseEnterDelay,\n    mouseEnterDelay = _props$mouseEnterDela === void 0 ? 0.15 : _props$mouseEnterDela,\n    _props$mouseLeaveDela = props.mouseLeaveDelay,\n    mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela;\n  var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n  var child = React.Children.only(children);\n  var dropdownTrigger = cloneElement(child, {\n    className: classNames(\"\".concat(prefixCls, \"-trigger\"), _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), child.props.className),\n    disabled: disabled\n  });\n  var triggerActions = disabled ? [] : trigger;\n  var alignPoint;\n  if (triggerActions && triggerActions.includes('contextMenu')) {\n    alignPoint = true;\n  }\n  // =========================== Visible ============================\n  var _useMergedState = useMergedState(false, {\n      value: open !== undefined ? open : visible\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedOpen = _useMergedState2[0],\n    setOpen = _useMergedState2[1];\n  var onInnerOpenChange = useEvent(function (nextOpen) {\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(nextOpen);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(nextOpen);\n    setOpen(nextOpen);\n  });\n  // =========================== Overlay ============================\n  var overlayClassNameCustomized = classNames(overlayClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n  var builtinPlacements = getPlacements({\n    arrowPointAtCenter: _typeof(arrow) === 'object' && arrow.pointAtCenter,\n    autoAdjustOverflow: true\n  });\n  var onMenuClick = React.useCallback(function () {\n    setOpen(false);\n  }, []);\n  var renderOverlay = function renderOverlay() {\n    // rc-dropdown already can process the function of overlay, but we have check logic here.\n    // So we need render the element to check and pass back to rc-dropdown.\n    var overlay = props.overlay;\n    var overlayNode;\n    if (typeof overlay === 'function') {\n      overlayNode = overlay();\n    } else {\n      overlayNode = overlay;\n    }\n    overlayNode = React.Children.only(typeof overlayNode === 'string' ? /*#__PURE__*/React.createElement(\"span\", null, overlayNode) : overlayNode);\n    return /*#__PURE__*/React.createElement(OverrideProvider, {\n      prefixCls: \"\".concat(prefixCls, \"-menu\"),\n      expandIcon: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n      }, /*#__PURE__*/React.createElement(RightOutlined, {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n      })),\n      mode: \"vertical\",\n      selectable: false,\n      onClick: onMenuClick,\n      validator: function validator(_ref3) {\n        var mode = _ref3.mode;\n        // Warning if use other mode\n        process.env.NODE_ENV !== \"production\" ? warning(!mode || mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(mode, \"\\\" is not supported for Dropdown's Menu.\")) : void 0;\n      }\n    }, overlayNode);\n  };\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(RcDropdown, _extends({\n    alignPoint: alignPoint\n  }, props, {\n    mouseEnterDelay: mouseEnterDelay,\n    mouseLeaveDelay: mouseLeaveDelay,\n    visible: mergedOpen,\n    builtinPlacements: builtinPlacements,\n    arrow: !!arrow,\n    overlayClassName: overlayClassNameCustomized,\n    prefixCls: prefixCls,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    transitionName: getTransitionName(),\n    trigger: triggerActions,\n    overlay: renderOverlay,\n    placement: getPlacement(),\n    onVisibleChange: onInnerOpenChange\n  }), dropdownTrigger);\n};\nDropdown.Button = DropdownButton;\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}